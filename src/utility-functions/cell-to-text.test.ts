import { cellToText } from './cell-to-text'

it('identifies the basic letters', () => {
    expect(cellToText([true, false, false, false, false, false])).toEqual('a')
    expect(cellToText([true, true, false, false, false, false])).toEqual('b')
    expect(cellToText([true, false, false, true, false, false])).toEqual('c')
    expect(cellToText([true, false, false, true, true, false])).toEqual('d')
    expect(cellToText([true, false, false, false, true, false])).toEqual('e')
    expect(cellToText([true, true, false, true, false, false])).toEqual('f')
    expect(cellToText([true, true, false, true, true, false])).toEqual('g')
    expect(cellToText([true, true, false, false, true, false])).toEqual('h')
    expect(cellToText([false, true, false, true, false, false])).toEqual('i')
    expect(cellToText([false, true, false, true, true, false])).toEqual('j')
    expect(cellToText([true, false, true, false, false, false])).toEqual('k')
    expect(cellToText([true, true, true, false, false, false])).toEqual('l')
    expect(cellToText([true, false, true, true, false, false])).toEqual('m')
    expect(cellToText([true, false, true, true, true, false])).toEqual('n')
    expect(cellToText([true, false, true, false, true, false])).toEqual('o')
    expect(cellToText([true, true, true, true, false, false])).toEqual('p')
    expect(cellToText([true, true, true, true, true, false])).toEqual('q')
    expect(cellToText([true, true, true, false, true, false])).toEqual('r')
    expect(cellToText([false, true, true, true, false, false])).toEqual('s')
    expect(cellToText([false, true, true, true, true, false])).toEqual('t')
    expect(cellToText([true, false, true, false, false, true])).toEqual('u')
    expect(cellToText([true, true, true, false, false, true])).toEqual('v')
    expect(cellToText([false, true, false, true, true, true])).toEqual('w')
    expect(cellToText([true, false, true, true, false, true])).toEqual('x')
    expect(cellToText([true, false, true, true, true, true])).toEqual('y')
    expect(cellToText([true, false, true, false, true, true])).toEqual('z')
})

it('identifies strong group signs', () => {
    expect(cellToText([true, false, false, false, false, true])).toEqual('ch')
    expect(cellToText([true, false, false, true, false, true])).toEqual('sh')
    expect(cellToText([true, false, false, true, true, true])).toEqual('th')
    expect(cellToText([true, false, false, false, true, true])).toEqual('wh')
    expect(cellToText([true, true, false, false, true, true])).toEqual('ou')
    expect(cellToText([false, false, true, true, false, false])).toEqual('st')
    expect(cellToText([true, true, false, false, false, true])).toEqual('gh')
    expect(cellToText([true, true, false, true, false, true])).toEqual('ed')
    expect(cellToText([true, true, false, true, true, true])).toEqual('er')
    expect(cellToText([false, true, false, true, false, true])).toEqual('ow')
    expect(cellToText([false, false, true, true, true, false])).toEqual('ar')
    expect(cellToText([false, false, true, true, false, true])).toEqual('ing')
})

it('identifies strong contractions', () => {
    expect(cellToText([true, true, true, true, false, true])).toEqual('and')
    expect(cellToText([true, true, true, true, true, true])).toEqual('for')
    expect(cellToText([true, true, true, false, true, true])).toEqual('of')
    expect(cellToText([false, true, true, true, false, true])).toEqual('the')
    expect(cellToText([false, true, true, true, true, true])).toEqual('with')
})