
import { Cell } from '../types/cell'

export function cellToUnicode(cell: Cell): string {
    return ""
}

export function cellToBraille(cell: Cell): string {
    let binaryString = ""
    for (let i = 0; i < 6; i++) {
        if (cell[i]) {
            binaryString += (i + 1)
        }
    }

    return binaryToBraille[binaryString] || binaryString
}
const binaryToBraille: { [key: string]: string } = {
    "": '⠀', // braille space
    "1": '⠁',
    "2": '⠂',
    "12": '⠃',
    "3": '⠄',
    "13": '⠅',
    "23": '⠆',
    "123": '⠇',
    "4": '⠈',
    "14": '⠉',
    "24": '⠊',
    "124": '⠋',
    "34": '⠌',
    "134": '⠍',
    "234": '⠎',
    "1234": '⠏',
    "5": '⠐',
    "15": '⠑',
    "25": ':',
    "125": '⠓',
    "35": '⠔',
    "135": '⠕',
    "235": '⠖',
    "1235": '⠗',
    "45": '⠘',
    "145": '⠙',
    "245": '⠚',
    "1245": '⠛',
    "345": '⠜',
    "1345": '⠝',
    "2345": '⠞',
    "12345": '⠟',
    "6": '⠠',
    "16": '⠡',
    "26": '⠢',
    "126": '⠣',
    "36": '⠤',
    "136": '⠥',
    "236": '⠦',
    "1236": '⠧',
    "46": '⠨',
    "146": '⠩',
    "246": '⠪',
    "1246": '⠫',
    "346": '⠬',
    "1346": '⠭',
    "2346": '⠮',
    "12346": '⠯',
    "56": '⠰',
    "156": '⠱',
    "256": '⠲',
    "1256": '⠳',
    "356": '⠴',
    "1356": '⠵',
    "2356": '⠶',
    "12356": '⠷',
    "456": '⠸',
    "1456": '⠹',
    "2456": '⠺',
    "12456": '⠻',
    "3456": '⠼',
    "13456": '⠽',
    "23456": '⠾',
    "123456": '⠿',
}